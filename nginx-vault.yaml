apiVersion: v1
kind: Service
metadata:
  name: nginxsvc
  labels:
    app: nginx
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    name: http
  - port: 443
    protocol: TCP
    name: https
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        vault.hashicorp.com/agent-image: hashicorp/vault:1.5.0
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-tls.crt: 'pki/issue/2024-servers'
        vault.hashicorp.com/agent-inject-secret-tls.key: 'pki/issue/2024-servers'
        vault.hashicorp.com/agent-inject-template-tls.crt: |
            {{- with secret "pki/issue/2024-servers" "common_name=myserver.example.com" "ttl=72h" -}}
            {{ .Data.certificate }}
            {{ range .Data.ca_chain}}
            {{ . }}
            {{ end }}
            {{- end }}
        vault.hashicorp.com/agent-inject-template-tls.key: |
            {{- with secret "pki/issue/2024-servers" "common_name=myserver.example.com" "ttl=72h" -}}
            {{ .Data.private_key }}
            {{- end }}
        vault.hashicorp.com/secret-volume-path: /etc/secrets
    spec:
      serviceAccountName: internal-app
      volumes:
        - name: configmap-volume
          configMap:
            name: nginxconfigmap
      containers:
        - name: nginxhttps
          image: ymqytw/nginxhttps:1.5
          command: ["/home/auto-reload-nginx.sh"]
          ports:
            - containerPort: 443
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /index.html
              port: 80
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: configmap-volume
